1.1Set集合概述和特点【应用】

+ 不可以存储重复元素
+ 没有索引,不能使用普通for循环遍历
+ 无序集合


2.1TreeSet集合概述和特点【应用】
TreeSet底层为红黑树
+ 不可以存储重复元素
+ 没有索引
+ 可以将元素按照规则进行排序
  + TreeSet()：根据其元素的自然排序进行排序
  + TreeSet(Comparator comparator) ：根据指定的比较器进行排序

  遍历规则：先获取左边，再获取中间，再获取右边  ，  所以打印结果 从小到大
   o-this  从大到小
   this-o  从小到大




2.4两种比较方式总结【理解】

  + 两种比较方式小结
    + 自然排序: 自定义类实现Comparable接口,重写compareTo方法,根据返回值进行排序
    + 比较器排序: 创建TreeSet对象的时候传递Comparator的实现类对象,重写compare方法,根据返回值进行排序
    + 在使用的时候,默认使用自然排序,当自然排序不满足现在的需求时,必须使用比较器排序
  + 两种方式中关于返回值的规则
    + 如果返回值为负数，表示当前存入的元素是较小值，存左边
    + 如果返回值为0，表示当前存入的元素跟集合中元素重复了，不存
    + 如果返回值为正数，表示当前存入的元素是较大值，存右边




4.1HashSet集合概述和特点【应用】

   + 底层数据结构是哈希表
   + 存取无序
   + 不可以存储重复元素
   + 没有索引,不能使用普通for循环遍历


4.3哈希值【理解】

- 哈希值简介
  是JDK根据对象的地址或者字符串或者数字算出来的int类型的数值

- 如何获取哈希值
  Object类中的public int hashCode()：返回对象的哈希码值

- 哈希值的特点
  - 同一个对象多次调用hashCode()方法返回的哈希值是相同的
  - 默认情况下，不同对象的哈希值是不同的。而重写hashCode()方法，可以实现让不同对象的哈希值相同



4.4哈希表结构【理解】

 + JDK1.8以前
   	数组 + 链表
1.创建一个默认长度16,默认加载因子为0.75的数组,数组名 table
2.根据元素的哈希值跟数组的长度计算出应存入的位置
3.判断当前位置是否为nu,如果是nul直接存入
4.如果应存入的位置不为nul,表示有元素,则调用 equals方法比较属性值
5.如果一样,则不存,如果不样,则存入数组,老元素挂在新元素下面

加载因子  确定哈希表啥时候扩容
当数组里面存了16*0.75=12个元素的时候，数组就会扩容为原先的两倍



 JDK1.8以后
数组 + 链表 + 红黑树
 + 节点个数少于等于8个
   数组 + 链表

 + 节点个数多于8个：链表变为红黑树
   数组 + 红黑树
   当挂在下面的元素过多，不留添加和查询，因此再JDK8以后，链表长度超过8以后，自动转成红黑树，但存储流程不变

HashSet集合存储自定义类型元素,要想实现元素的唯一,要求必须重写hashCode方法和equals方法



HashSet去除重复元素的原理

调用被添加元素的hashCode()，和HashSet中已有元素的hashCode比较是否相同
如果不相同，直接存储
如果相同，调用equals方法比较是否相同
 不相同，直接存储元素
相同，认为是同一元素.不存储



