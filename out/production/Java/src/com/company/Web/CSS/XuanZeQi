**选择器的分类**：
选择器：对不同元素添加不同样式

| 分类        | 名称        | 符号   | 作用                                                         | 示例         |
| ---------- | ---------- | ------ | ------------------------------------------------------------ | ------------ |
| 基本选择器   | 元素选择器 | 标签名 | 基于标签名匹配元素                                           | div{ }       |
|            | 类选择器   | `.`    | 基于class属性值匹配元素                                      | .center{ }   |
|            | ID选择器   | `#`    | 基于id属性值匹配元素                                         | #username{ } |
| 属性选择器   | 属性选择器 | `[]`    | 基于某属性匹配元素                                           | [type]{ }    |
| 伪类选择器   | 伪类选择器 | `:`     | 用于向某些选择器添加特殊的效果                               | a : hover{ } |
| 组合选择器   | 后代选择器 | `空格`  | 使用`空格符号`结合两个选择器，基于第一个选择器，匹配第二个选择器的所有后代元素 | .top li{ }   |
|            | 子级选择器 | `>`    | 使用 `>` 结合两个选择器，基于第一个选择器，匹配第二个选择器的直接子级元素 | .top > li{ } |
|            | 同级选择器 | `~`    | 使用 `~` 结合两个选择器，基于第一个选择器，匹配第二个选择器的所有兄弟元素 | .l1 ~ li{ }  |
|            | 相邻选择器 | `+`    | 使用 `+` 结合两个选择器，基于第一个选择器，匹配第二个选择器的相邻兄弟元素 | .l1 + li{ }  |
|            | 通用选择器 | `*`    | 匹配文档中的所有内容                                         | *{ }         |



伪类选择器，用于选择处于特定状态的元素，例如，一些元素中的第一个元素，或者某个元素被鼠标指针悬停。
常用伪类:

* 锚伪类

  在支持 CSS 的浏览器中，链接的不同状态都可以以不同的方式显示
  a:link {color:#FF0000;} 	/* 未访问的链接 */
  a:visited {color:#00FF00;} 	/* 已访问的链接 */
  a:hover {color:#FF00FF;} 	/* 鼠标悬停链接 */
  a:active {color:#0000FF;} 	/* 已选中的链接 */

伪类顺序 link ，visited，hover，active，否则有可能失效。