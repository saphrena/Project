lASCII：是基于拉丁字母的一套电脑编码系统，用于显示现代英语，主要包括控制字符(回车键、退格、换行键等)和可显示字符(英文大小写字符、阿拉伯数字和西文符号)

基本的ASCII字符集，使用7位表示一个字符，共128字符。ASCII的扩展字符集使用8位表示一个字符，共256字符，方便支持欧洲常用字符。是一个系统支持的所有字符的集合，包括各国家文字、标点符号、图形符号、数字等






GBK：最常用的中文码表。是在GB2312标准基础上的扩展规范，使用了双字节编码方案，共收录了21003个汉字，完全兼容GB2312标准，同时支持繁体汉字以及日韩汉字等



UTF-8编码：可以用来表示Unicode标准中任意字符，它是电子邮件、网页及其他存储或传送文字的应用 中，优先采用的编码。互联网工程工作小组（IETF）要求所有互联网协议都必须支持UTF-8编码。它使用一至四个字节为每个字符编码

编码规则：

  128个US-ASCII字符，只需一个字节编码

  拉丁文等字符，需要二个字节编码

  大部分常用字（含中文），使用三个字节编码

  其他极少使用的Unicode辅助字符，使用四字节编码





  ### 字符串中的编码解码问题【应用】

  - 相关方法

    | 方法名                                   | 说明                                               |
    | ---------------------------------------- | -------------------------------------------------- |
    | byte[] getBytes()                        | 使用平台的默认字符集将该 String编码为一系列字节    |
    | byte[] getBytes(String charsetName)      | 使用指定的字符集将该 String编码为一系列字节        |
    | String(byte[] bytes)                     | 使用平台的默认字符集解码指定的字节数组来创建字符串 |
    | String(byte[] bytes, String charsetName) | 通过指定的字符集解码指定的字节数组来创建字符串     |