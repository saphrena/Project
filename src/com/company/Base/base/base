
JAVA的四类八种基本数据类型
1、先说明两个词汇的基本概念：
    bit （位）：位是计算机中存储数据的最小单位，指二进制数中的一个位数，其值为“0”或“1”。

    byte （字节）：字节是计算机存储容量的基本单位，一个字节由8位二进制数组成。在计算机内部，一个字节可以表示一个数据或者一个英文字母，但是一个汉字需要两个字节表示。
   接：


第一类、整数类型
byte：8 位，用于表示最小数据单位，如文件中数据，-128~127，默认值为：0
short：16 位，很少用，-32768 ~ 32767，默认值为：0
int：32 位、最常用，-2^31-1~2^31  （21 亿），默认值为：0
long：64 位、次常用，默认值为：0L

第二类、浮点数类型
float:单精度类型，32 位，后缀 F 或 f，1 位符号位，8 位指数，23 位有效尾数，默认值为：0.0f
double：64 位，最常用，后缀 D 或 d，1 位符号位，11 位指数，52 位有效尾数，默认值为：0.0d
java浮点型默认为double型，所以要声明一个变量为float型时，需要在数字后面加F或者f：
例如：double d = 88888.8;      float f = 88888.8f;  //不加f的话会报错

第三类、字符类型
char:16位，java字符使用Unicode编码
        占的位数：char类型是一个单一的 16 位 Unicode 字符；
        最小值： \u0000（即为0）；
        最大值： \uffff（即为65,535）；

第四类、布尔类型
boolean：true 真  和 false 假  默认false


记忆方式：
        8位：Byte（字节型）
        16位：short（短整型）、char（字符型）
        32位：int（整型）、float（单精度型/浮点型）
        64位：long（长整型）、double（双精度型）
        最后一个：boolean(布尔类型）


在Java中整型、实型、字符型被视为简单数据类型，这些类型由低级到高级分别为
     (byte，short，char)--int--long--float--double

简单数据类型之间的转换又可以分为：
   ●低级到高级的自动类型转换
   ●高级到低级的强制类型转换
   ●包装类过渡类型能够转换



 数据类型转换必须满足如下规则：

   ①不能对boolean数据类型进行转换；

   ②不能把对象类型转换为不相关类对象；

   ③在把容量大的类型转换为容量下的类型时，必须用强制类型转换；

   ④转换过程中可能会导致溢出或损失精度，如：int i = 128,byte b = (byte)i；这里b = -128(溢出)；

   ⑤浮点数到整数的转换是舍去小数为，并不是四舍五入，如：float f = 3.7f,int i = (int)f；这里i = 3。



①整数的默认类型是int型；

②浮点数默认是double型，但是定义并初始化float类型变量的时候，值后面必须跟上F或者f


装箱和拆箱
        Integer integer = 5;//装箱
        int i = integer;//拆箱
        简而言之，装箱就是基本数据类型转换为包装器类型，拆箱就是包装器类型转换基本类型。
